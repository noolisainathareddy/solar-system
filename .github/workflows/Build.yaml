name: Build App

on:
    workflow_dispatch:
    push:
        branches:
            - main
            - 'feature/*'
env:
    MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        strategy:
            matrix:
                nodejs-version: [18]
                os: [ubuntu-latest]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Clone repo
              uses: actions/checkout@v5

            - name: Install Node - ${{ matrix.nodejs-version }} 
              uses: actions/setup-node@v6
              with:
                node-version: ${{ matrix.nodejs-version }}

            - name: cache-dependecies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ matrix.os}}-node-modes-${{ matrix.nodejs-version}}-${{ hashFiles('package-lock.json')}}

            - name: Install dependencies
              run: npm install
            
            - name: Run-test-cases
              run: npm test

            - name: Rename test results artifact file
              if: always()
              run: mv test-results.xml test-results-${{ matrix.nodejs-version }}.xml

            - name: Upload Test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                name: Test-Results-${{ matrix.nodejs-version }}-${{ matrix.os }}
                path: test-results-${{ matrix.nodejs-version }}-${{ matrix.os }}.xml
    code-coverage:
        container: 
          image: node:18
        runs-on: ubuntu-latest
        steps:
            - name: Clone Repo
              uses: actions/checkout@v5
            
            - name: Install node
              uses: actions/setup-node@v6
              with:
                node-version: '18'
            - name: cache-dependecies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: node-modules-${{ hashFiles('package-lock.json')}}

            - name: Install dependencies
              run: npm install
            
            - name: Run-Code-Coverage
              continue-on-error: true
              run: npm run coverage
            
            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: Coverage-Results
                path: coverage
    Docker-Login:
        # needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:

        - name: Login to Docker
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Docker Build
          uses: docker/build-push-action@v3
          with:
            push: false
            tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

        - name: List Images
          run: | 
            docker images
            docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI=mongodb+srv://supercluster.d83jj.mongodb.net/superData \
            -e MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
            -e MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
            docker ps

        - name: Docker Push
          uses: docker/build-push-action@v3
          with:
            push: true
            tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
    Dev-Deploy:
      environment:
        name: dev
      runs-on: ubuntu-latest
      steps:
        - name: Install Kubectl
          uses: azure/setup-kubectl@v4
          with:
            version: 'v1.30.0'
       
        - name: Clone repo
          uses: actions/checkout@v5
       
        - name: Replace Namespace
          uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/deployment.yaml"]'
          env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}  
        
        - name: Cat deployment
          run: |
            ls -l
            cat kubernetes/development/deployment.yaml
            echo "test=sai" >> $GITHUB_ENV
          
        - name: step level env
          run: | 
            echo ${{ env.test }}
            echo ${{ vars.ENV_NAME }}
            echo ${{ github.ref }}

        